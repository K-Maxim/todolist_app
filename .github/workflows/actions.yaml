name: Build adnd deploy
on: [push]
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: code clone
        uses: actions/checkout@v2
      - name: docker build
        run: docker build -t mkaprenko/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker login
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: docker push
        run: docker push mkaprenko/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG_MODE: ${{ secrets.DEBUG_MODE }}
      DB_ENGINE: ${{ secrets.DB_ENGINE }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: render configs
        run: |
          cat deploy/docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
          cat deploy/.env | envsubst > deploy/.env
      - name: copy files to servers
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          source: "deploy/docker-compose.yaml,deploy/.env"
          target: "todolist"
          strip_components: 1
      - name: deploy app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd todolist
            docker system prune -a -f
            docker-compose up -d
