version: '3.9'

services:

  front:
    image: sermalenk/skypro-front:lesson-35
    ports:
      - "80:80"
    depends_on:
    - postgres
    - api
    networks:
    - todolist


  api:
    build:
      context: ..
    depends_on:
      migrations:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    env_file:
      - ../.env
    environment:
      POSTGRES_HOST: postgres
    ports:
      - "8000:8000"
    networks:
        - todolist

  migrations:
    build:
      context: ..
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ../.env
    environment:
      POSTGRES_HOST: postgres
    networks:
      - todolist
    command: python ./manage.py migrate


  postgres:
    image: postgres:13.0-alpine
    restart: always
    env_file:
      - ../.env
    volumes:
      - pg_data_todolist:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - todolist

volumes:
  pg_data_todolist:

networks:
  todolist:
    driver: bridge

