version: '3.9'

services:

  front:
    image: sermalenk/skypro-front:lesson-34
    ports:
      - "8080:80"
    depends_on:
    - postgres
    - api
    networks:
    - todolist_front_networks


  api:
    build:
      context: .
    depends_on:
      migrations:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./.docker_env:/code/.env.example
    networks:
        - todolist_front_networks
        - db_todolist

  migrations:
    build:
      context: .
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./.docker_env:/code/.env.example
    networks:
      - db_todolist
    command: sh -c "python manage.py migrate"


  postgres:
    image: postgres:13.0-alpine
    restart: always
    env_file:
      - .env.example
    volumes:
      - pg_data_todolist:/var/lib/postgres/data
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - db_todolist

volumes:
  pg_data_todolist:

networks:
  db_todolist:
    driver: bridge
  todolist_front_networks:
